{
  "rasa_nlu_data": {
    "common_examples": [
      {
        "text": "I need some more Chuck Norris in my life.",
        "intent": "chuckNorris",
        "entities": []
      },
      {
        "text": "I need a room.",
        "intent": "advice",
        "entities": []
      },
      {
        "text": "I want to hear a Chuck Norris joke!",
        "intent": "chuckNorris",
        "entities": []
      },
      {
        "text": "I want to hear a chuck Norris joke about love.",
        "intent": "chuckNorris",
        "entities": [
          {
            "start": 41,
            "end": 45,
            "value": "love",
            "entity": "query"
          }
        ]
      },
      {
        "text": "Tell me a chuck norris joke.",
        "intent": "chuckNorris",
        "entities": []
      },
      {
        "text": "Tell me a chuck norris joke about golf.",
        "intent": "chuckNorris",
        "entities": [
          {
            "start": 34,
            "end": 38,
            "value": "golf",
            "entity": "query"
          }
        ]
      },
      {
        "text": "chuck norris",
        "intent": "chuckNorris",
        "entities": []
      },
      {
        "text": "chuck norris joke baseball",
        "intent": "chuckNorris",
        "entities": [
          {
            "start": 18,
            "end": 26,
            "value": "baseball",
            "entity": "query"
          }
        ]
      },
      {
        "text": "business chuck Norris joke",
        "intent": "chuckNorris",
        "entities": [
          {
            "start": 0,
            "end": 8,
            "value": "business",
            "entity": "query"
          }
        ]
      },
      {
        "text": "What does Chuck Norris think about television?",
        "intent": "chuckNorris",
        "entities": [
          {
            "start": 35,
            "end": 45,
            "value": "television",
            "entity": "query"
          }
        ]
      },
      {
        "text": "Tell me something about Chuck Norris",
        "intent": "chuckNorris",
        "entities": []
      },
      {
        "text": "I need some good advice",
        "intent": "advice",
        "entities": []
      },
      {
        "text": "I need some advice",
        "intent": "advice",
        "entities": []
      },
      {
        "text": "I need some advice about love",
        "intent": "advice",
        "entities": [
          {
            "start": 25,
            "end": 29,
            "value": "love",
            "entity": "query"
          }
        ]
      },
      {
        "text": "What can you tell me about life",
        "intent": "advice",
        "entities": [
          {
            "start": 27,
            "end": 31,
            "value": "life",
            "entity": "query"
          }
        ]
      },
      {
        "text": "I need some help with painting",
        "intent": "advice",
        "entities": [
          {
            "start": 22,
            "end": 30,
            "value": "painting",
            "entity": "query"
          }
        ]
      },
      {
        "text": "Help me with my job problem.",
        "intent": "advice",
        "entities": [
          {
            "start": 16,
            "end": 19,
            "value": "job",
            "entity": "query"
          }
        ]
      },
      {
        "text": "I need some help with my boyfriend.",
        "intent": "advice",
        "entities": [
          {
            "start": 25,
            "end": 34,
            "value": "boyfriend",
            "entity": "query"
          }
        ]
      },
      {
        "text": "Tell me something about life.",
        "intent": "advice",
        "entities": [
          {
            "start": 24,
            "end": 28,
            "value": "life",
            "entity": "query"
          }
        ]
      },
      {
        "text": "advice",
        "intent": "advice",
        "entities": []
      },
      {
        "text": "I need advice.",
        "intent": "advice",
        "entities": []
      },
      {
        "text": "hello",
        "intent": "greet",
        "entities": []
      },
      {
        "text": "Howdy",
        "intent": "greet",
        "entities": []
      },
      {
        "text": "Hola",
        "intent": "greet",
        "entities": []
      },
      {
        "text": "good morning",
        "intent": "greet",
        "entities": []
      },
      {
        "text": "good afternoon",
        "intent": "greet",
        "entities": []
      },
      {
        "text": "hey",
        "intent": "greet",
        "entities": []
      },
      {
        "text": "Is there a Chuck Norris joke about school?",
        "intent": "chuckNorris",
        "entities": [
          {
            "start": 35,
            "end": 41,
            "value": "school",
            "entity": "query"
          }
        ]
      },
      {
        "text": "C-Ya",
        "intent": "goodbye",
        "entities": []
      },
      {
        "text": "Goodbye",
        "intent": "goodbye",
        "entities": []
      },
      {
        "text": "bye",
        "intent": "goodbye",
        "entities": []
      },
      {
        "text": "Ciao",
        "intent": "goodbye",
        "entities": []
      },
      {
        "text": "later",
        "intent": "goodbye",
        "entities": []
      },
      {
        "text": "Is there Chuck Noriss joke about school?",
        "intent": "chuckNorris",
        "entities": [
          {
            "start": 33,
            "end": 39,
            "value": "school",
            "entity": "query"
          }
        ]
      },
      {
        "text": "i need a room",
        "intent": "room",
        "entities": [
          {
            "start": 9,
            "end": 13,
            "value": "room",
            "entity": "query"
          }
        ]
      }
    ]
  }
}







curl --request POST \
  --url http://localhost:5000/parse \
  --header 'content-type: application/json' \
  --data '{
 "q": "Welche RÃ¤ume sind am Donnerstag, 12.10.2019, frei in Wilhelminenhof",
 "model": "rasaTutorialBot"
}' | python -mjson.tool




//global variables
var globalVariable=global.get('globalVariable');
//flow variables
var question=flow.get('question');
var result=flow.get('result');
//node variables
context.gebaeude = [];
var campus;
var length=0;


//load file
msg.payload=JSON.parse(msg.payload);

// prepare campus if exists in question
if (question.includes("Wilhelminenhof")) campus = "WH";
else if (question.includes("Treskowallee")) campus = "TA";
else campus = "Kein Campus gefunden";

//check if date entity is set
//for(i = 0; i < result.entities.length; i++){
//    if((result.entities[i].entity).includes("date")){
      //msg.payload="Date vorhanden";
      //return msg;
//      }
//}

//Get campus 
for(var k in msg.payload){
    for(var x in msg.payload[k].VCALENDAR[0].VEVENT){
      if(msg.payload[k].VCALENDAR[0].VEVENT.hasOwnProperty(x)){
         length++;  
      }  
    } 
    for(i = 0; i < length; i++){
       if((msg.payload[k].VCALENDAR[0].VEVENT[i].LOCATION).includes(campus)){
              context.gebaeude.push(decodeURIComponent(escape(msg.payload[k].VCALENDAR[0].VEVENT[0].LOCATION)));
//            context.gebaeude.push("Startzeit: "+msg.payload[k].VCALENDAR[0].VEVENT[0]["DTSTART;TZID=Europe/Berlin"]);
//            context.gebaeude.push("Endzeit: "+msg.payload[k].VCALENDAR[0].VEVENT[0]["DTEND;TZID=Europe/Berlin"]);
       }
    }
    length=0;
}  


//node.warn(msg.payload[11].VCALENDAR[0].VEVENT[0].LOCATION);
//var x=msg.payload.length;
//msg.payload=decodeURIComponent(escape(msg.payload["0"].VCALENDAR[0].VEVENT[0].LOCATION));
//node.warn(context.gebaeude);
msg.payload=context.gebaeude;
return msg;
